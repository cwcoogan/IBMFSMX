.hero-row-reverse-mobile {
  @include media-breakpoint-down(md) {
    flex-direction: column;
    align-items: center;
  }
}

.home-hero-row-reverse-mobile {
  @include media-breakpoint-down(md) {
    flex-direction: column-reverse;
  }
}

.hr {
  display: block;
  height: 2px;
  width: 100%;
  border-top: 2px solid #0043ce;
  margin: 0em 0;
  content: " ";
  padding: 0;
}

.team-row-container {
  display: flex;
  flex-direction: column;
  


  @include media-breakpoint-down(sm) {
      align-items: center;
  }

  @include media-breakpoint-up(md) {
    margin: 4em 0;
    flex-direction: row;
    justify-content: space-around;
  }


  .image-container {
    width: 200px;
    


    @include media-breakpoint-down(sm) {
        &:not(:last-child) {
            margin-bottom: 5rem;
        }
    }

    .image {
        width: 200px;
        height: 170px;
        float: left;
        background-repeat: no-repeat;
        background-position: center center;
        
        &.profilepic {
            background-image: url('/images/pictureIconTeam.png');
        }

        &.chase {
          background-image: url('/images/profile-pic/chase-coogan.png');
        }

        &.john {
          background-image: url('/images/profile-pic/john-lucas.png');
        }

        &.matt {
          background-image: url('/images/profile-pic/matt-konwiser.png');
        }

        &.david-w {
          background-image: url('/images/profile-pic/david-waren.png');
        }

        &.steve {
          background-image: url('/images/profile-pic/steve-faruque.png');
        }

        &.adam-j {
          background-image: url('/images/profile-pic/adam-j-rodgers.png');
        }

        &.kevin {
          background-image: url('/images/profile-pic/kevin-rupp.png');
        }

        &.duane {
          background-image: url('/images/profile-pic/duane-almeter.png');
        }

        &.mitchell {
          background-image: url('/images/profile-pic/mitchell-odum.png');
        }

        &.mo {
          background-image: url('/images/profile-pic/mohammad-alvi.png');
        }

        &.rich {
          background-image: url('/images/profile-pic/rich-russo.png');
        }

        &.chrisc {
          background-image: url('/images/profile-pic/chris-cardran.png');
        }

        &.chrisl {
          background-image: url('/images/profile-pic/christopher-liccardi.png');
        }

        &.chriss {
          background-image: url('/images/profile-pic/christopher-suman.png');
        }

        &.david {
          background-image: url('/images/profile-pic/david-gibson.png');
        }

        &.douglas{
          background-image: url('/images/profile-pic/douglas-freeby.png');
        }

        &.jerry {
          background-image: url('/images/profile-pic/jerry-steward.png');
        }

        &.jonathan {
          background-image: url('/images/profile-pic/jonathan-tomasulo.png');
        }

        &.rajesh {
          background-image: url('/images/profile-pic/rajesh-kartha.png');
        }

        &.robert {
          background-image: url('/images/profile-pic/robert-pugh.png');
        }

        &.eduardo {
          background-image: url('/images/profile-pic/eduardo-gomez.png');
        }

        &.emily {
          background-image: url('/images/profile-pic/emily-placet.png');
        }

        &.alejandro {
          background-image: url('/images/profile-pic/alejandro-obrador.png');
        }

        &.bharath {
          background-image: url('/images/profile-pic/bharath-kaimal.png');
        }

    }

    .title {
        font-weight: bold;
        font-size: 20px;
        line-height: 36px;
        text-align: center;
       
    }

    .text {
        font-weight: normal;
        font-size: 16px;
        line-height: 24px;
        text-align: center;
    }
  }  

}

.home-info-row-container {
  display: flex;
  flex-direction: column;
  


  @include media-breakpoint-down(sm) {
      align-items: center;
  }

  @include media-breakpoint-up(md) {
    margin: 2.5em 0;
    flex-direction: row;
    justify-content: space-around;
  }

  .image-container:hover{
    transform: scale(1.1);
  }
  .image-container {
    width: 247px;
    margin-top: 40px;
    


    @include media-breakpoint-down(sm) {
        &:not(:last-child) {
            margin-bottom: 5rem;
        }
    }

    .image {
        width: 247px;
        height: 170px;
        float: left;
        background-repeat: no-repeat;
        background-position: center center;
        background-color: #be95ff;
        
   
        

    }

    .title {
        font-weight: bold;
        font-size: 20px;
        line-height: 36px;
        text-align: center;
        color: white;
       
    }

    .text {
        font-weight: normal;
        font-size: 16px;
        line-height: 40px;
        text-align: center;
        color: white;
    }
  }  

}



.hr-purple {
  display: block;
  height: 2px;
  width: 100%;
  border-top: 2px solid #be95ff;
  margin: 0em 0;
  content: " ";
  padding: 0;
}

.hr-purple2 {
  display: block;
  height: 2px;
  width: 200px;
  border-top: 2px solid #be95ff;
  margin: 0em 0;
  content: " ";
  padding: 0;
}

.team-image-hat {
  width: 300px;
  height: 300px;
  float: right;
  margin: 0em 0;
  position: relative;
  top: -300px;
  left: 100px;
}

.text-margin {
  margin: 1em 0;
  font-weight: lead;
  font-size: 20px;
  line-height: 20px;
  position: relative;
  left: -50px;
  top: 20px;
}

.second-text-margin {
  float: right;
  margin: 1em 0;
  font-weight: lead;
  font-size: 20px;
  line-height: 20px;
  position: relative;
  left: -605px;
  top: 20px;
}

.darkgreen-bg {
  background-color: #3d9e67;
  background-size: 400% 400%;
}

@keyframes gradientAnimation {
  0% {
    background-position: 100% 0%;
  }
  50% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 100% 0%;
  }
}

@mixin flexBox {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}

@mixin flex($flexGrow:"1", $flexShrink:"1", $flexBasis:"0%") {
	-webkit-box-flex: #{$flexGrow};
	-ms-flex-positive: #{$flexGrow};
	flex-grow: #{$flexGrow};

	-ms-flex-negative: #{$flexShrink};
	flex-shrink: #{$flexShrink};

	-ms-flex-preferred-size: #{$flexBasis};
	flex-basis: #{$flexBasis};
}

@mixin flexDirection($flexDirection:"column") {
	@if $flexDirection == "row" {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: normal;
	} @else if $flexDirection == "row-reverse" {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: reverse;
	} @else if $flexDirection == "column" {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
	} @else {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
	}

	-ms-flex-direction: #{$flexDirection};
	flex-direction: #{$flexDirection};
}


// FAMILY TREE
// Try keeping the same content's size for all cards or the design might break
// Have fun with the variables :)

$linkBorderWidth: 2px;
$link: #{$linkBorderWidth} solid #c6d1cb;
$marginBelowGeneration: 20px;
$cardMargin: 10px;
$borderRadius: 3px;
$extraBorderSize: #{$borderRadius}; // Needed for border-radius

#familyTree {
	// Base styles
  font-size: 14px;
	width: 60%;
	text-align: center;
	margin: auto;
	
	*:before, *:after {
		content: "";
		position: absolute;
	}
	
	[class^="card"], .pair, .generation { position: relative; }
	
	.generation {
		@include flexBox();
		margin-bottom: $marginBelowGeneration;
		
		.pair {
			@include flex();
			@include flexBox();
		}
		
		&:last-of-type { margin-bottom: 0; }
	}
	
	[class^="card"] {
		@include flex();
		padding: 10px;
		border-radius: 3px;
		margin: $cardMargin;
		color: #212c3c;
	}
	
	.card-y-h { background-color: lightgoldenrodyellow; } 
	.card-y-h:hover{
		transform: scale(1.2);
	}

	.card-y { background-color: lightgoldenrodyellow; } 
	.card-g { background-color: lightgreen; } 
  	.card-b { background-color: lightblue;
		.row-container{
			display: flex;
			flex-direction: column;

			@include media-breakpoint-down(sm) {
				align-items: center;
			}
		
			@include media-breakpoint-up(md) {
				flex-direction: row;
				justify-content: center;
			}

			.left{
				justify-content: left;
			}
			.center{
				justify-content: center;
			}
			.right{
				justify-content: right;
			}
		}
	}
	
	// Links
	
	.pair {
		&:after {
			width: calc(50% - #{$linkBorderWidth});
			border: $link;
			border-top: 0;
			border-bottom-left-radius: $borderRadius;
			border-bottom-right-radius: $borderRadius;
			right: 0;
			left: 0;
			margin: auto;
			top: calc(100% + #{$marginBelowGeneration} / 2 - #{$extraBorderSize});
			height: $extraBorderSize;
		}
	}
	
[class^="card"] {
		&:before, &:after {
			right: 0;
			left: 0;
			width: 0;
			margin: auto;
			border-left: $link;
			height: calc(#{$cardMargin} + #{$marginBelowGeneration} / 2);
		}

		&:before { bottom: 100%; }
		&:after { top: 100%; }
	}

	#grandParents [class^="card"]:before, #child [class^="card"]:after {
		border: 0;
		opacity: 0;
	}
}

// Responsive

@media screen and (max-width: 700px) {
	#familyTree #grandParents {
		
		&:before, &:after {
			border-top: $link;
			height: calc(50% + #{$marginBelowGeneration});
			width: $cardMargin;
			top: 50%;
		}
		
		&:before {
			opacity: 1;
			border-left: $link;
			right: calc(100% + #{$extraBorderSize});
			border-top-left-radius: $borderRadius;
		}
		
		&:after {
			border-right: $link;
			left: calc(100% + #{$extraBorderSize});
			border-top-right-radius: $borderRadius;
		}
		
		.pair {
			@include flexDirection();
			&:after { border: 0; }
		}

		[class^="card"] {
			&:before {
				border-bottom: $link !important;
				width: $cardMargin;
				height: 0;
			}

			&:after {
				width: calc(#{$extraBorderSize} + #{$cardMargin});
				height: calc(50% + #{$cardMargin} + #{$extraBorderSize} * 2);
			}

			&:first-child {
				&:before {
					top: 50%;
					bottom: auto;
				}

				&:after {
					border-top: $link;
					top: 50%;
					bottom: auto;
				}
			}

			&:last-child {
				&:before {
					bottom: 50%;
					top: auto;
				}

				&:last-child:after {
					border-bottom: $link;
					bottom: 50%;
					top: auto;
				}
			}
		}

		.pair:first-child [class^="card"] {
			&:before {
				left: -#{$cardMargin};
				right: auto;
			}

			&:after {
				left: auto;
				right: 100%;
			}

			&:first-child:after { border-top-left-radius: $borderRadius; }
			&:last-child:after { border-bottom-left-radius: $borderRadius; }
		}

		.pair:last-child [class^="card"] {
			&:before {
				right: -#{$cardMargin};
				left: auto;
			}

			&:after {
				left: 100%;
				right: auto;
				border-left: 0;
				border-right: $link;
			}

			&:first-child:after { border-top-right-radius: $borderRadius; }
			&:last-child:after { border-bottom-right-radius: $borderRadius; }
		}
	}

	#familyTree #parents [class^="card"] {
		&:before {
			border-bottom: $link;
			width: calc(#{$cardMargin} * 2 + #{$extraBorderSize});
			bottom: 50%;
			height: calc(50% + #{$cardMargin});
		}

		&:first-child:before {
			right: 100%;
			left: auto;
			border-bottom-left-radius: $borderRadius;
		}

		&:last-child:before {
			border-left: 0;
			border-right: $link;
			left: 100%;
			border-bottom-right-radius: $borderRadius;
		}
	}
}

@media screen and (max-width: 400px) {
	#familyTree #grandParents {
		@include flexDirection();
		
		&:before {
			top: 25%;
			height: calc(75% + #{$marginBelowGeneration});
		}
		
		&:after {
			top: 75%;
			height: calc(25% + #{$marginBelowGeneration});
		}
	}
	
	#familyTree #parents {
			&:after {
				border-left: $link;
				border-top: $link;
				border-top-left-radius: $borderRadius;
				height: calc(50% + #{$marginBelowGeneration});
				width: $cardMargin;
				right: calc(100% + #{$extraBorderSize});
				top: 50%;
			}
		
		.pair {
			@include flexDirection();
			
			&:after {
				border: 0;
				height: 0;
				opacity: 0;
			}
		}
		
		[class^="card"] {
			&:after {
				right: 100%;
				left: auto;
				width: calc(#{$extraBorderSize} + #{$cardMargin});
			}
		}
		
		[class^="card"]:first-child {
			&:before {
				height: 90%;
				bottom: 60%;
			}
		
			&:after {
				border-top: $link;
				height: calc(40% + #{$cardMargin});
				top: 60%;
				border-top-left-radius: $borderRadius;
			}
		}
		
		[class^="card"]:last-child {
			&:before { height: calc(150% + #{$cardMargin}* 3); }
			
			&:after {
				border-bottom: $link;
				height: calc(50% + #{$cardMargin});
				bottom: 50%;
				top: auto;
				border-bottom-left-radius: $borderRadius;
			}
		}
	}
	
	#familyTree #child {
		&:before {
			border-left: $link;
			border-bottom: $link;
			border-bottom-left-radius: $borderRadius;
			height: 100%;
			bottom: 50%;
			right: calc(100% - #{$cardMargin});
			left: auto;
			width: calc(#{$extraBorderSize} + #{$cardMargin} * 2);
		}
		
		[class^="card"]:before {
			border: 0;
			height: 0;
			opacity: 0;
		}
	}
}